[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "veka-bot"
version = "0.1.0"
description = "A modern, feature-rich Discord bot built with nextcord"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Shafaat", email = "shafaat@veka.gg" }
]
keywords = ["discord", "bot", "nextcord", "async"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
]
dependencies = [
    "nextcord>=2.6.0",
    "motor>=3.3.2",
    "redis>=5.0.1",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "colorlog>=6.8.0",
    "pydantic>=2.5.2",
    "uvicorn>=0.24.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",     # For coverage reporting
    "pytest-mock>=3.12.0",   # For mocking in tests
    "pytest-env>=1.1.1",     # For environment variables in tests
]
dev = [
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "ruff>=0.1.6",          # Fast linter
    "pre-commit>=3.5.0",    # Git hooks
    "commitizen>=3.12.0",   # Standardized commit messages
]
docs = [
    "sphinx>=7.2.6",        # Documentation generator
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/veka-bot"
"Bug Tracker" = "https://github.com/yourusername/veka-bot/issues"
"Documentation" = "https://veka-bot.readthedocs.io"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.version]
path = "app/__init__.py"

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["app"]
known_third_party = ["nextcord", "motor", "redis", "pydantic"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "tests/",
    "docs/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=app --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
env = [
    "ENVIRONMENT=test",
    "DISCORD_TOKEN=dummy_token",
]

[tool.coverage.run]
branch = true
source = ["app"]
omit = [
    "tests/*",
    "docs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "S",    # flake8-bandit
]
ignore = [
    "E501",  # line length handled by black
]
exclude = [
    ".git",
    ".venv",
    "docs",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "app/__init__.py:__version__"
] 